#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <fun>

new const PLUGIN [] = "Advanced Reset Score";
new const VERSION [] = "1.0";
new const AUTHOR [] = "TimeChangePeople";

new rs_Cmds[] [] = {
	"say /rs",
	"say_team /rs",
	"say /resetscore",
	"say_team /resetscore",
	"say /reset",
	"say_team /reset"
};

new resets[33];

new cvar_reset_max;
new cvar_reset_enable;
new cvar_reset_admins;
new cvar_reset_type;

public plugin_init()
{
	register_plugin(PLUGIN,VERSION,AUTHOR)

	for(new i = 0; i < sizeof rs_Cmds; i++)
	{
		register_clcmd(rs_Cmds[i], "HookResetScore");
	}
	
	cvar_reset_admins = register_cvar("rs_admins","1");
	cvar_reset_max = register_cvar("rs_max","5");
	cvar_reset_type = register_cvar("rs_type","1");
	cvar_reset_enable = register_cvar("rs_enable","1");

	register_logevent("logevent_round_start", 2, "1=Round_Start")
}

public HookResetScore( const id)
{

	new szName[33];
	get_user_name(id, szName, charsmax(szName) - 1);
	
	if(!get_pcvar_num(cvar_reset_enable))
		return PLUGIN_HANDLED;

	if(get_pcvar_num(cvar_reset_admins) && !is_user_admin(id))
		return PLUGIN_HANDLED;

	if(resets[id] >= get_pcvar_num(cvar_reset_max))
		return PLUGIN_HANDLED;

	switch(get_pcvar_num(cvar_reset_type))
	{
		case 1:
		{
			set_user_frags(id, 0);
			cs_set_user_deaths(id, 0);
			set_user_frags(id, 0);
			cs_set_user_deaths(id, 0);
			resets[id]++;
			client_print(0, print_chat, "[ %i / %i ]Jucatorul %s si-a resetat scorul !",resets[id],get_pcvar_num(cvar_reset_max),szName);
			return PLUGIN_HANDLED;
		}
		
		case 2:
		{
			set_user_frags(id, get_user_frags(id));
			cs_set_user_deaths(id, 0);
			set_user_frags(id, get_user_frags(id));
			cs_set_user_deaths(id, 0);
			resets[id]++;
			client_print(0, print_chat, "[ %i / %i ]Jucatorul %s si-a resetat scorul !",resets[id],get_pcvar_num(cvar_reset_max),szName);
			return PLUGIN_HANDLED;
		}

		case 3:
		{
			set_user_frags(id, 0);
			cs_set_user_deaths(id, cs_get_user_deaths(id));
			set_user_frags(id, 0);
			cs_set_user_deaths(id, cs_get_user_deaths(id));
			resets[id]++;
			client_print(0, print_chat, "[ %i / %i ]Jucatorul %s si-a resetat scorul !",resets[id],get_pcvar_num(cvar_reset_max),szName);
			return PLUGIN_HANDLED;
		}

		default:return PLUGIN_HANDLED;

	}
	return PLUGIN_CONTINUE;

		
}

public logevent_round_start()
{
	new Players[32]
	new playerCount, i;
	get_players(Players, playerCount, "b")

	for (i=0; i<playerCount; i++)
  	{
		if(is_user_alive(Players[i]))
		{
			resets[Players[i]] = 0;
		}
	}
}
